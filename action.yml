name: 'Dependabot SHA Comment Action'
description: 'Update version comment for SHA pin of GitHub Actions on Dependabot update.'
author: timmeinerzhagen
inputs: 
  GITHUB_TOKEN:
    description: 'Github token of the repository with scopes repos and workflows'
    required: true
  FORMAT_TAG:
    description: 'Format version to tag format e.g. Version 5 to v5.0.0 (Dependabot formats tags to versions by default)'
    required: false
    default: false
branding:
  icon: 'lock'  
  color: 'yellow'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ inputs.GITHUB_TOKEN }}

    - name: Check Pull Request Meta
      uses: actions/github-script@v5
      id: check
      with:
        script: |
          // Check if correct event //
          if (context.eventName !== 'pull_request_target') {
            core.setFailed("This action can only be used with the 'pull_request_target' trigger.");
          } else {
            // Check if PR opened by Dependabot //
            if (context.payload.sender.login == 'dependabot[bot]') {
              core.info("Processing the Pull Request...")
              return true;
            } else {
              core.info("Not a Dependabot Pull Request.");
            }
          }

    - name: Get Pull Request Diff
      shell: bash
      id: diff
      if: steps.check.outputs.result
      run: |
        ## Prepare Branches ##
        git checkout $HEAD
        git branch --set-upstream-to=origin/$HEAD $HEAD
        git pull --all

        ## Get Diff; add to ENV ##
        DIFF=$(git diff origin/$BASE $HEAD | awk 1 ORS='\\n')
        echo 'DIFF<<EOF' >> $GITHUB_ENV
        echo $DIFF >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      env:
        BASE: ${{ github.event.pull_request.base.ref }}
        HEAD: ${{ github.event.pull_request.head.ref }}

    - name: Add Comment to Dependency SHA
      uses: actions/github-script@v5
      id: version-change
      if: steps.check.outputs.result
      env:
        FORMAT_TAG: ${{ inputs.FORMAT_TAG }}
      with:
        script: |
          const {DIFF, FORMAT_TAG} = process.env;
          const payload = context.payload;

          const titleparts = payload.pull_request.title.split('to')
          const version_update = titleparts[titleparts.length - 1].trim();

          // Check all changed files //
          for(const fileDiff of DIFF.split('diff --git a/')){

            // Check if file is GitHub Actions file //
            const path = fileDiff.split('\n')[0].split(' ')[0];
            if (!(path.startsWith('.github/workflows') && (path.endsWith('.yml') || path.endsWith('.yaml')))) {
              core.info("Not a GitHub Actions Dependabot Pull Request.");
              continue;
            }

            // Look through DIFF for version change //
            for(const line of fileDiff.split('\\n')) {
              if (line.startsWith('+') && line.includes('@')) {
                const version = line.split("@")[1].split('#')[0].trim();

                // If version is SHA, then add comment //
                if(version.length == 40) {
                  let output = '', error = '';
                  const options = {
                    listeners: { 
                      stdout: (data) => { output += data.toString(); },
                      stderr: (data) => { error += data.toString(); }
                    },
                    cwd: './'
                  };
                  if(FORMAT_TAG)
                    version_formatted = 'v' + version_update + (version_update.length <= 1 ? '.0' : '') + (version_update.length <= 3 ? '.0' : '');
                  else
                    version_formatted = version_update;

                  // Calculate changes //
                  await exec.exec('cat ', [path], options);
                  const newline = line.substring(1).split('#')[0].trim() + ' # ' + version_formatted + '\n';

                  // Save changes in file //
                  await exec.exec('sed -i \"s/' + line.substring(1).trim().replace(new RegExp("\/", 'g'), "\\/") + '/' + newline.trim().replace(new RegExp("\/", 'g'), "\\/") + '/g\" ' + path);
                }
              }
            }
          }
          return true;

    - name: Push file changes
      shell: bash
      if: steps.check.outputs.result && steps.version-change.outputs.result
      run: |
        git config --global user.name GitHub Actions
        git config --global user.email github-actions[bot]@users.noreply.github.com
        git add .
        git commit -m "Add Version Comment"
        git push 
